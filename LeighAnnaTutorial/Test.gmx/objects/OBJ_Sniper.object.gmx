<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_Sniper</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Speed = 10;
SpeedMod = 1;

SightRange = 700;

TargetX = x;
TargetY = y;

BlinkingTimer = 0;

State = "Idle";

Aggressiveness = 0;

ReloadTimer = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>State = "Idle";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BlinkingTimer += 0.5;

if(distance_to_object(OBJ_Player) &lt;= SightRange)   //&amp;&amp; abs(y-OBJ_Player.y) &lt; LayerSize
{
        Aggressiveness += .02;
        if(random(1) &lt; Aggressiveness*.03)
        {
            if(Aggressiveness &gt; .50) //Just a random attack chance, subject to change
            {
                State = "Attacking";
                MyAttack = instance_create(x,y,ATK_ProjectileSplit);    //Change this
                Aggressiveness = 0;
                MyAttack.depth = depth;
                MyAttack.Owner = "Enemy";
            }                           
        }
}

if(State == "Attacking" &amp;&amp; alarm[0] = -1) {
    alarm[0] = ReloadTimer;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x,y,State);

/*If the Snipe is aiming, blink.
if(OBJ_Player.CurrentHP &gt; 0 &amp;&amp; distance_to_object(OBJ_Player) &lt; SightRange){
    if(State == "Idle") {
        if(BlinkingTimer % 2) {
            TargetX = OBJ_Player.x;
            TargetY = OBJ_Player.y;
            draw_set_alpha(1);
            draw_line_width_color(x, y, TargetX, TargetY, 3, c_red, c_red);
        } else {                                                
            draw_set_alpha(0);
        }                                               //Else, keep solid.
    } else if (State == "Attacking") {
        draw_set_alpha(1);
        draw_line_width_color(x, y, TargetX, TargetY, 3, c_red, c_red);
    }
}

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
