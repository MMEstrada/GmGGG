<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_object[0] = OBJ_Camera;
 
view_vborder[0] = 384;
view_hborder[0] = 512;
 
view_visible[0] = true;
 
x = OBJ_Player.x;
y = OBJ_Player.y;
 
TargetX = x;
TargetY = y;
 
State = "Player";
 
MoveSpeed = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>TargetX = OBJ_Player.x;
TargetY = OBJ_Player.y;
 
if(distance_to_point(TargetX,TargetY) &lt; MoveSpeed){
 
    var MyBR = instance_nearest(x,y,OBJ_BattleRegion);
 
    switch State{
 
        case "Player":
            TargetX = OBJ_Player.x;
            TargetY = OBJ_Player.y;
 
            if(MyBR.IsActive == true){
                State = "Region";
            }
            break;
        
        case "Region":
            var MinX = OBJ_BattleRegion.LeftEdge+512;
            var MaxX = OBJ_BattleRegion.RightEdge-512;
 
            var MinY = OBJ_BattleRegion.TopEdge+384;
            var MaxY = OBJ_BattleRegion.BottomEdge-384;   
 
            TargetX = clamp(OBJ_Player.x,MinX,MaxX);
            TargetY = clamp(OBJ_Player.y,MinY,MaxY);
 
            if(MyBR.IsActive == false || distance_to_object(OBJ_BattleRegion) &gt; 0){
                State = "Player";
            }
 
            break;
    }
    speed = 0;
 
}else{
 
    move_towards_point(TargetX,TargetY,MoveSpeed);
 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
