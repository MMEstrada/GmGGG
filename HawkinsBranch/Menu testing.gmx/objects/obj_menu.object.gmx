<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Creates array containing names of buttons for the menu screen, as well as sets the
button spacing and the starting value of mpos, which is used in determining what menu
actions are taken in scr_menu.*/

menu[0] = "Start";
menu[1] = "Continue";
menu[2] = "Level Select";
menu[3] = "Options";
menu[4] = "Exit Game";

space = 64;
mpos = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var move = 0;
/*if(keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord("W")))
{*/
move -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord("W")), gamepad_button_check_pressed(0, gp_padu),0);
    /*with(obj_button) hover = false;
}
if(keyboard_check_pressed(vk_down) ||keyboard_check_pressed(ord("S")))
{*/
move += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord("S")), gamepad_button_check_pressed(0, gp_padd),0);
    /*with(obj_button) hover = false;
}*/

if (move != 0)
{
    mpos += move;
    if (mpos &lt; 0) mpos = array_length_1d(menu) - 1;
    if (mpos &gt; array_length_1d(menu) - 1) mpos = 0;
}
with (obj_button)
{
    var hover = false;
    if(position_meeting(mouse_x, mouse_y, self))
    {
        hover = true;
        obj_menu.mpos = action;
    }
    else if(!position_meeting(mouse_x, mouse_y, self) &amp;&amp; hover)
    {
        hover = false;
    }
    
    if(action == obj_menu.mpos)
    {
        image_index = 1;
    }
    else
    {
        image_index = 0;
    }
}

var push;
push = max(keyboard_check_released(vk_enter),keyboard_check_released(vk_shift),keyboard_check_released(vk_space),gamepad_button_check_released(0, gp_face1),0);
if (push == 1) scr_menu();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var m;
for(m = 0; m &lt; array_length_1d(menu); m += 1)
{
    var inst;
    inst = instance_create(x + space, y + (m * space), obj_button)
    inst.text = menu[m];
    inst.action = m;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
